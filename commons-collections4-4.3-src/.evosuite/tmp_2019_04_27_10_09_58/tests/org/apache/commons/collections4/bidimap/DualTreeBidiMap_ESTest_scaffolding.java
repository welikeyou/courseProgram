/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Sat Apr 27 04:32:08 GMT 2019
 */

package org.apache.commons.collections4.bidimap;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class DualTreeBidiMap_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.collections4.bidimap.DualTreeBidiMap"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    /*No java.lang.System property to set*/
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(DualTreeBidiMap_ESTest_scaffolding.class.getClassLoader() ,
      "org.apache.commons.collections4.map.AbstractLinkedMap",
      "org.apache.commons.collections4.SortedBidiMap",
      "org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator",
      "org.apache.commons.collections4.KeyValue",
      "org.apache.commons.collections4.trie.AbstractBitwiseTrie",
      "org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator$MapEntry",
      "org.apache.commons.collections4.multimap.AbstractMultiValuedMap$MultiValuedMapEntry",
      "org.apache.commons.collections4.bidimap.TreeBidiMap$ViewMapIterator",
      "org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry",
      "org.apache.commons.collections4.BulkTest",
      "org.apache.commons.collections4.bidimap.TreeBidiMap$Node",
      "org.apache.commons.collections4.bidimap.AbstractDualBidiMap$BidiMapIterator",
      "org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap",
      "org.apache.commons.collections4.OrderedBidiMap",
      "org.apache.commons.collections4.map.ListOrderedMap",
      "org.apache.commons.collections4.map.AbstractHashedMap",
      "org.apache.commons.collections4.map.AbstractHashedMap$KeySetIterator",
      "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values",
      "org.apache.commons.collections4.keyvalue.TiedMapEntry",
      "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet",
      "org.apache.commons.collections4.map.AbstractIterableMapTest",
      "org.apache.commons.collections4.trie.KeyAnalyzer",
      "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap",
      "org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet",
      "org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValuesIterator",
      "org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator",
      "org.apache.commons.collections4.MapIterator",
      "org.apache.commons.collections4.map.SingletonMap",
      "org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator",
      "org.apache.commons.collections4.map.ListOrderedMap$ListOrderedMapEntry",
      "org.apache.commons.collections4.map.LinkedMap",
      "org.apache.commons.collections4.trie.PatriciaTrie",
      "org.apache.commons.collections4.bidimap.AbstractDualBidiMap$MapEntry",
      "org.apache.commons.collections4.bidimap.TreeBidiMap$InverseEntryView",
      "org.apache.commons.collections4.Trie",
      "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator",
      "org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceKeySetIterator",
      "org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecoratorTest$TestOrderedBidiMap",
      "org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef",
      "org.apache.commons.collections4.map.AbstractHashedMap$ValuesIterator",
      "org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap",
      "org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator",
      "org.apache.commons.collections4.map.AbstractIterableMap",
      "org.apache.commons.collections4.map.AbstractSortedMapDecorator",
      "org.apache.commons.collections4.bidimap.DualTreeBidiMap$BidiOrderedMapIterator",
      "org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet",
      "org.apache.commons.collections4.bidimap.TreeBidiMap$ViewIterator",
      "org.apache.commons.collections4.map.AbstractHashedMap$HashIterator",
      "org.apache.commons.collections4.map.ReferenceMapTest$AccessibleEntry",
      "org.apache.commons.collections4.map.ListOrderedMap$ListOrderedMapIterator",
      "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator",
      "org.apache.commons.collections4.map.AbstractHashedMap$HashEntry",
      "org.apache.commons.collections4.keyvalue.AbstractMapEntry",
      "org.apache.commons.collections4.map.AbstractReferenceMap$SoftRef",
      "org.apache.commons.collections4.trie.UnmodifiableTrie",
      "org.apache.commons.collections4.map.StaticBucketMap$Node",
      "org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator",
      "org.apache.commons.collections4.map.LRUMap",
      "org.apache.commons.collections4.map.AbstractMapDecorator",
      "org.apache.commons.collections4.map.LRUMapTest$MockLRUMapSubclassBlocksRemove",
      "org.apache.commons.collections4.Get",
      "org.apache.commons.collections4.map.AbstractHashedMap$Values",
      "org.apache.commons.collections4.keyvalue.DefaultMapEntry",
      "org.apache.commons.collections4.IterableSortedMap",
      "org.apache.commons.collections4.map.LRUMapTest$MockLRUMapSubclassFirstBlocksRemove",
      "org.apache.commons.collections4.map.AbstractReferenceMap",
      "org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntrySetIterator",
      "org.apache.commons.collections4.bidimap.TreeBidiMap$ViewMapEntryIterator",
      "org.apache.commons.collections4.OrderedMap",
      "org.apache.commons.collections4.map.AbstractMapTest",
      "org.apache.commons.collections4.map.AbstractOrderedMapTest",
      "org.apache.commons.collections4.map.UnmodifiableSortedMap",
      "org.apache.commons.collections4.trie.AbstractPatriciaTrie",
      "org.apache.commons.collections4.map.LRUMapTest",
      "org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator",
      "org.apache.commons.collections4.bidimap.DualTreeBidiMap",
      "org.apache.commons.collections4.OrderedMapIterator",
      "org.apache.commons.collections4.bidimap.TreeBidiMap$ValueView",
      "org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry",
      "org.apache.commons.collections4.bidimap.TreeBidiMap$View",
      "org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap",
      "org.apache.commons.collections4.IterableMap",
      "org.apache.commons.collections4.map.AbstractHashedMap$KeySet",
      "org.apache.commons.collections4.IterableGet",
      "org.apache.commons.collections4.map.LRUMapTest$MockLRUMapSubclass",
      "org.apache.commons.collections4.keyvalue.AbstractKeyValue",
      "org.apache.commons.collections4.map.AbstractOrderedMapDecorator",
      "org.apache.commons.collections4.bidimap.TreeBidiMap$InverseViewMapIterator",
      "org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement",
      "org.apache.commons.collections4.bidimap.UnmodifiableBidiMap",
      "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap",
      "org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse",
      "org.apache.commons.collections4.map.AbstractHashedMap$EntrySet",
      "org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry",
      "org.apache.commons.collections4.trie.AbstractPatriciaTrie$Reference",
      "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer",
      "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet",
      "org.apache.commons.collections4.map.FixedSizeSortedMap",
      "org.apache.commons.collections4.keyvalue.UnmodifiableMapEntry",
      "org.apache.commons.collections4.bidimap.TreeBidiMap$InverseViewMapEntryIterator",
      "org.apache.commons.collections4.bidimap.TreeBidiMap$KeyView",
      "org.apache.commons.collections4.bidimap.TreeBidiMap$EntryView",
      "org.apache.commons.collections4.BidiMap",
      "org.apache.commons.collections4.map.LRUMapTest$SingleHashCode",
      "org.apache.commons.collections4.keyvalue.DefaultKeyValue",
      "org.apache.commons.collections4.Unmodifiable",
      "org.apache.commons.collections4.bidimap.AbstractDualBidiMap",
      "org.apache.commons.collections4.bidimap.DualHashBidiMap",
      "org.apache.commons.collections4.bidimap.TreeBidiMap",
      "org.apache.commons.collections4.BoundedMap",
      "org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeMap",
      "org.apache.commons.collections4.ResettableIterator",
      "org.apache.commons.collections4.bidimap.DualTreeBidiMap$ViewMap",
      "org.apache.commons.collections4.Put",
      "org.apache.commons.collections4.AbstractObjectTest",
      "org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator",
      "org.apache.commons.collections4.map.IdentityMap$IdentityEntry",
      "org.apache.commons.collections4.map.UnmodifiableEntrySet$UnmodifiableEntry",
      "org.apache.commons.collections4.map.IdentityMap",
      "org.apache.commons.collections4.map.AbstractHashedMap$EntrySetIterator",
      "org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry",
      "org.apache.commons.collections4.OrderedIterator",
      "org.apache.commons.collections4.map.UnmodifiableOrderedMap"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(DualTreeBidiMap_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.apache.commons.collections4.bidimap.AbstractDualBidiMap",
      "org.apache.commons.collections4.bidimap.DualTreeBidiMap",
      "org.apache.commons.collections4.bidimap.DualTreeBidiMap$BidiOrderedMapIterator",
      "org.apache.commons.collections4.map.AbstractIterableMap",
      "org.apache.commons.collections4.map.AbstractMapDecorator",
      "org.apache.commons.collections4.map.AbstractSortedMapDecorator",
      "org.apache.commons.collections4.bidimap.DualTreeBidiMap$ViewMap"
    );
  }
}
