/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 27 04:29:33 GMT 2019
 */

package org.apache.commons.collections4.list;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import org.apache.commons.collections4.list.GrowthList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GrowthList_ESTest extends GrowthList_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      GrowthList<Integer> growthList0 = new GrowthList<Integer>(linkedList0);
      Integer integer0 = new Integer(769);
      growthList0.set(769, integer0);
      assertEquals(770, linkedList0.size());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = new Integer(782);
      linkedList0.add(integer0);
      GrowthList<Integer> growthList0 = GrowthList.growthList((List<Integer>) linkedList0);
      boolean boolean0 = growthList0.addAll(782, (Collection<? extends Integer>) linkedList0);
      assertEquals(1564, linkedList0.size());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GrowthList<String> growthList0 = new GrowthList<String>();
      growthList0.add(0, "DXgN1?B=w");
      growthList0.add(2492, "s7ig]NTAOzx-UI");
      assertTrue(growthList0.contains("s7ig]NTAOzx-UI"));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      GrowthList<Object> growthList0 = new GrowthList<Object>(0);
      Object object0 = new Object();
      growthList0.set(0, object0);
      Integer integer0 = new Integer((-955));
      Object object1 = growthList0.set(448, integer0);
      assertNull(object1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GrowthList<String> growthList0 = new GrowthList<String>(0);
      growthList0.set(0, "");
      growthList0.set(0, "org.apache.commons.collections4.list.AbstractListDecorator");
      assertFalse(growthList0.contains(""));
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      GrowthList<Object> growthList0 = new GrowthList<Object>(linkedList0);
      // Undeclared exception!
      try { 
        growthList0.set((-2764), linkedList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -2764, Size: 0
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GrowthList<String> growthList0 = new GrowthList<String>();
      // Undeclared exception!
      try { 
        growthList0.set((-1), "");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        GrowthList.growthList((List<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Collection must not be null.
         //
         verifyException("org.apache.commons.collections4.collection.AbstractCollectionDecorator", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      GrowthList<Object> growthList0 = new GrowthList<Object>(1);
      // Undeclared exception!
      try { 
        growthList0.addAll(1, (Collection<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GrowthList<Integer> growthList0 = new GrowthList<Integer>();
      // Undeclared exception!
      try { 
        growthList0.addAll((-1512), (Collection<? extends Integer>) growthList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -1512, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GrowthList<Integer> growthList0 = new GrowthList<Integer>();
      Integer integer0 = new Integer((-498));
      // Undeclared exception!
      try { 
        growthList0.add((-498), integer0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -498, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      GrowthList<Object> growthList0 = null;
      try {
        growthList0 = new GrowthList<Object>((List<Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Collection must not be null.
         //
         verifyException("org.apache.commons.collections4.collection.AbstractCollectionDecorator", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      GrowthList<String> growthList0 = null;
      try {
        growthList0 = new GrowthList<String>((-2952));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -2952
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      GrowthList<Object> growthList0 = new GrowthList<Object>();
      GrowthList<String> growthList1 = new GrowthList<String>(0);
      growthList1.set(0, (String) null);
      boolean boolean0 = growthList0.addAll(0, (Collection<?>) growthList1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      GrowthList<Object> growthList0 = new GrowthList<Object>();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      GrowthList<Integer> growthList1 = new GrowthList<Integer>(linkedList0);
      boolean boolean0 = growthList0.addAll(1, (Collection<?>) growthList1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      GrowthList<Object> growthList0 = new GrowthList<Object>();
      GrowthList<String> growthList1 = new GrowthList<String>(0);
      boolean boolean0 = growthList0.addAll(0, (Collection<?>) growthList1);
      assertFalse(boolean0);
  }
}
