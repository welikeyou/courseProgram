/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 27 03:42:39 GMT 2019
 */

package org.apache.commons.collections4.functors;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Comparator;
import org.apache.commons.collections4.Predicate;
import org.apache.commons.collections4.functors.ComparatorPredicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ComparatorPredicate_ESTest extends ComparatorPredicate_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Integer integer0 = new Integer(1293);
      Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(comparator0).compare(anyInt() , anyInt());
      ComparatorPredicate.Criterion comparatorPredicate_Criterion0 = ComparatorPredicate.Criterion.LESS_OR_EQUAL;
      ComparatorPredicate<Integer> comparatorPredicate0 = new ComparatorPredicate<Integer>(integer0, comparator0, comparatorPredicate_Criterion0);
      boolean boolean0 = comparatorPredicate0.evaluate(integer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Object object0 = new Object();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(comparator0).compare(any() , any());
      ComparatorPredicate.Criterion comparatorPredicate_Criterion0 = ComparatorPredicate.Criterion.GREATER_OR_EQUAL;
      ComparatorPredicate<Object> comparatorPredicate0 = new ComparatorPredicate<Object>(object0, comparator0, comparatorPredicate_Criterion0);
      boolean boolean0 = comparatorPredicate0.evaluate(object0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(comparator0).compare(anyString() , anyString());
      ComparatorPredicate.Criterion comparatorPredicate_Criterion0 = ComparatorPredicate.Criterion.LESS;
      ComparatorPredicate<String> comparatorPredicate0 = new ComparatorPredicate<String>("JthAaqNYPP ", comparator0, comparatorPredicate_Criterion0);
      boolean boolean0 = comparatorPredicate0.evaluate("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ComparatorPredicate.Criterion comparatorPredicate_Criterion0 = ComparatorPredicate.Criterion.valueOf("GREATER");
      Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(comparator0).compare(anyString() , anyString());
      ComparatorPredicate<String> comparatorPredicate0 = new ComparatorPredicate<String>("GREATER", comparator0, comparatorPredicate_Criterion0);
      boolean boolean0 = comparatorPredicate0.evaluate("~&gQ9qu;R9=(X2C");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ComparatorPredicate.Criterion comparatorPredicate_Criterion0 = ComparatorPredicate.Criterion.EQUAL;
      Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn(3179).when(comparator0).compare(anyString() , anyString());
      ComparatorPredicate<String> comparatorPredicate0 = new ComparatorPredicate<String>(",CD^^V}%(2T", comparator0, comparatorPredicate_Criterion0);
      boolean boolean0 = comparatorPredicate0.evaluate(",CD^^V}%(2T");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ComparatorPredicate.Criterion comparatorPredicate_Criterion0 = ComparatorPredicate.Criterion.GREATER_OR_EQUAL;
      ComparatorPredicate<Object> comparatorPredicate0 = new ComparatorPredicate<Object>("3o*OLvKO7[=e/", (Comparator<Object>) null, comparatorPredicate_Criterion0);
      // Undeclared exception!
      try { 
        comparatorPredicate0.evaluate("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.collections4.functors.ComparatorPredicate", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ComparatorPredicate.Criterion comparatorPredicate_Criterion0 = ComparatorPredicate.Criterion.GREATER_OR_EQUAL;
      Integer integer0 = new Integer(1);
      // Undeclared exception!
      try { 
        ComparatorPredicate.comparatorPredicate(integer0, (Comparator<Integer>) null, (ComparatorPredicate.Criterion) comparatorPredicate_Criterion0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Comparator must not be null.
         //
         verifyException("org.apache.commons.collections4.functors.ComparatorPredicate", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Object object0 = new Object();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      ComparatorPredicate.Criterion comparatorPredicate_Criterion0 = ComparatorPredicate.Criterion.LESS_OR_EQUAL;
      Predicate<Object> predicate0 = ComparatorPredicate.comparatorPredicate(object0, comparator0, (ComparatorPredicate.Criterion) comparatorPredicate_Criterion0);
      Comparator<Object> comparator1 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn((-1)).when(comparator1).compare(any() , any());
      ComparatorPredicate<Object> comparatorPredicate0 = new ComparatorPredicate<Object>(object0, comparator1, comparatorPredicate_Criterion0);
      boolean boolean0 = comparatorPredicate0.evaluate(predicate0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Integer integer0 = new Integer(1985);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn((-1055)).when(comparator0).compare(any() , any());
      ComparatorPredicate.Criterion comparatorPredicate_Criterion0 = ComparatorPredicate.Criterion.GREATER_OR_EQUAL;
      ComparatorPredicate<Object> comparatorPredicate0 = new ComparatorPredicate<Object>("hkn", comparator0, comparatorPredicate_Criterion0);
      boolean boolean0 = comparatorPredicate0.evaluate(integer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Integer integer0 = new Integer(4);
      Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn(4, (-1009)).when(comparator0).compare(anyInt() , anyInt());
      ComparatorPredicate.Criterion comparatorPredicate_Criterion0 = ComparatorPredicate.Criterion.LESS;
      ComparatorPredicate<Integer> comparatorPredicate0 = new ComparatorPredicate<Integer>(integer0, comparator0, comparatorPredicate_Criterion0);
      boolean boolean0 = comparatorPredicate0.evaluate(integer0);
      boolean boolean1 = comparatorPredicate0.evaluate(integer0);
      assertTrue(boolean1);
      assertFalse(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Integer integer0 = new Integer(1985);
      Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn(1985).when(comparator0).compare(anyInt() , anyInt());
      ComparatorPredicate.Criterion comparatorPredicate_Criterion0 = ComparatorPredicate.Criterion.GREATER;
      ComparatorPredicate<Integer> comparatorPredicate0 = new ComparatorPredicate<Integer>(integer0, comparator0, comparatorPredicate_Criterion0);
      boolean boolean0 = comparatorPredicate0.evaluate(integer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn((-2222)).when(comparator0).compare(any() , any());
      ComparatorPredicate.Criterion comparatorPredicate_Criterion0 = ComparatorPredicate.Criterion.EQUAL;
      ComparatorPredicate<Object> comparatorPredicate0 = new ComparatorPredicate<Object>("kwL", comparator0, comparatorPredicate_Criterion0);
      boolean boolean0 = comparatorPredicate0.evaluate(comparatorPredicate_Criterion0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Object object0 = new Object();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn(1).when(comparator0).compare(any() , any());
      ComparatorPredicate.Criterion comparatorPredicate_Criterion0 = ComparatorPredicate.Criterion.GREATER_OR_EQUAL;
      ComparatorPredicate<Object> comparatorPredicate0 = new ComparatorPredicate<Object>(object0, comparator0, comparatorPredicate_Criterion0);
      Integer integer0 = new Integer(1);
      boolean boolean0 = comparatorPredicate0.evaluate(integer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn((-1)).when(comparator0).compare(any() , any());
      ComparatorPredicate.Criterion comparatorPredicate_Criterion0 = ComparatorPredicate.Criterion.GREATER;
      ComparatorPredicate<Object> comparatorPredicate0 = new ComparatorPredicate<Object>("7", comparator0, comparatorPredicate_Criterion0);
      boolean boolean0 = comparatorPredicate0.evaluate("7");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ComparatorPredicate.Criterion comparatorPredicate_Criterion0 = ComparatorPredicate.Criterion.LESS_OR_EQUAL;
      Integer integer0 = new Integer(4);
      Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn(4).when(comparator0).compare(anyInt() , anyInt());
      ComparatorPredicate<Integer> comparatorPredicate0 = new ComparatorPredicate<Integer>(integer0, comparator0, comparatorPredicate_Criterion0);
      boolean boolean0 = comparatorPredicate0.evaluate(integer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ComparatorPredicate.Criterion comparatorPredicate_Criterion0 = ComparatorPredicate.Criterion.EQUAL;
      Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(comparator0).compare(anyString() , anyString());
      ComparatorPredicate<String> comparatorPredicate0 = new ComparatorPredicate<String>("", comparator0, comparatorPredicate_Criterion0);
      boolean boolean0 = comparatorPredicate0.evaluate("AM(p8p.");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        ComparatorPredicate.comparatorPredicate("hv8wnY'lp", comparator0, (ComparatorPredicate.Criterion) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Criterion must not be null.
         //
         verifyException("org.apache.commons.collections4.functors.ComparatorPredicate", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        ComparatorPredicate.comparatorPredicate((Object) null, (Comparator<Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Comparator must not be null.
         //
         verifyException("org.apache.commons.collections4.functors.ComparatorPredicate", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      Predicate<String> predicate0 = ComparatorPredicate.comparatorPredicate("3o*OLvKO7[=e/", comparator0);
      assertNotNull(predicate0);
  }
}
