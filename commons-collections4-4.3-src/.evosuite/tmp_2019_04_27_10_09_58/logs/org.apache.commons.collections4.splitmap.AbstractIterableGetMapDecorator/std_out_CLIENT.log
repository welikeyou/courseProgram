* Starting client
* Connecting to master process on port 9499
* Analyzing classpath: 
  - D:\myProjects\courseProgram\commons-collections4-4.3-src\target\test-classes
  - D:\myProjects\courseProgram\commons-collections4-4.3-src\target\classes
  - D:\maven\LocalWare\org\easymock\easymock\4.0.2\easymock-4.0.2.jar
  - D:\maven\LocalWare\org\apache\commons\commons-lang3\3.8.1\commons-lang3-3.8.1.jar
  - D:\maven\LocalWare\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar
  - D:\maven\LocalWare\org\objenesis\objenesis\3.0.1\objenesis-3.0.1.jar
  - D:\maven\LocalWare\junit\junit\4.12\junit-4.12.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
[MASTER] 12:32:29.771 [pool-2-thread-1] WARN  TestSuiteSerialization - Cannot load tests because file does not exist: D:\myProjects\courseProgram\commons-collections4-4.3-src\.evosuite\evosuite-seeds\org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.seed
* Loaded 0 tests from D:\myProjects\courseProgram\commons-collections4-4.3-src\.evosuite\evosuite-seeds\org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.seed
* Total number of test goals: 
  - Line 23
  - Branch 21
  - Exception 0
  - MutationFactory 17
  - Output 41
  - Method 16
  - MethodNoException 16
  - CBranchFitnessFactory 21
* Using seed 1556339545619
* Starting evolution
* Search finished after 51s and 58 generations, 21045 statements, best individual has fitness: 24.055555555555557
* Writing sequences to pool
* Minimizing test suite
[MASTER] 12:33:28.297 [pool-2-thread-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 96%
* Total number of goals: 23
* Number of covered goals: 22
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 17
* Number of covered goals: 17
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 76%
* Total number of goals: 17
* Number of covered goals: 13
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 49%
* Total number of goals: 41
* Number of covered goals: 20
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 16
* Number of covered goals: 16
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 16
* Number of covered goals: 16
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Generated 49 tests with total length 650
* Resulting test suite's coverage: 90% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 76%
* Compiling and checking tests
* Writing JUnit test case 'AbstractIterableGetMapDecorator_ESTest' to D:\myProjects\courseProgram\commons-collections4-4.3-src\.evosuite\tmp_2019_04_27_10_09_58\tests
* Done!

